<?phpuse Workerman\Worker;use \system\modules\notify\models\NotifyMessage;use \system\modules\notify\models\DirectMessage;use \system\modules\user\components\UserIdentity;require_once __DIR__ . '/../Autoloader.php';define('APP_NAME', 'console'); // 应用名称，必填require_once(__DIR__ . '/../../../vendor/autoload.php');require_once(__DIR__ . '/../../../vendor/yiisoft/yii2/Yii.php');require_once(__DIR__ . '/../../../common/config/bootstrap.php');require_once(__DIR__ . '/../../../console/config/bootstrap.php');$config = yii\helpers\ArrayHelper::merge(    require_once(__DIR__ . '/../../../common/config/main.php'),    require_once(__DIR__ . '/../../../common/config/main-local.php'),    require_once(__DIR__ . '/../../../console/config/main.php'),    require_once(__DIR__ . '/../../../console/config/main-local.php'));$application = new yii\console\Application($config);$app = new \system\modules\main\components\LoadModule();$app->bootstrap($application);$worker = new Worker('websocket://0.0.0.0:8901');$worker->name = 'message';$worker->onMessage = function($connection, $msg) {    $data = \yii\helpers\Json::decode($msg, true);    if (!isset($data['token'])) {        $connection->close();    } else {        $user = UserIdentity::findIdentityByAccessToken($data['token']);        if (!$user) {            $connection->close();        }        $connection->uid = $user->user_id;    }};$worker->onWorkerStart = function($worker) {    \Workerman\Lib\Timer::add(3, function()use($worker){        foreach($worker->connections as $connection) {            if (!empty($connection->uid)) {                $messageQuery = NotifyMessage::find()->where(['user_id' => $connection->uid, 'is_read' => 0])                    ->orderBy(['created_at' => SORT_DESC]);                $message['count'] = $messageQuery->count();                $message['list'] = $messageQuery->limit(4)->asArray()->all();                $directQuery = DirectMessage::find()->with('sendUser')                    ->where(['to_user' => $connection->uid, 'is_read' => 0])                    ->orderBy(['create_at' => SORT_DESC]);                $direct['count'] = $directQuery->count();                $direct['list'] = $directQuery->limit(4)->asArray()->all();                $data = [                    'message' => $message,                    'direct' => $direct                ];                $connection->send(\yii\helpers\Json::encode($data));            } else {                $connection->close();            }        }    });};Worker::runAll();