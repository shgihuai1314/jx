<?php

namespace system\modules\role\models;

use Yii;
use yii\helpers\ArrayHelper;
use yii\helpers\Json;

/**
 * This is the model class for table "{{%tab_auth_role}}".
 *
 * @property integer $role_id
 * @property string $name
 * @property string $description
 * @property string $permission
 * @property string $code
 */
class AuthRole extends \system\models\Model
{
    public $log_flag = true;
    public $log_options = [
        'model_name' => '角色',//模型名称
    ];
    public static $cacheData = true; // 缓存数据

    // 成员
    public $users;

    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return '{{%tab_auth_role}}';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return parent::getRule([
            [['name'], 'required'],
            [['permission', 'users'], 'safe'],
            [['name', 'code'], 'string', 'max' => 64],
            [['description'], 'string', 'max' => 255],
            [['name', 'code'], 'unique'],
            [['is_init', 'is_default'], 'integer']
        ]);
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return ArrayHelper::merge([
            'role_id' => '角色ID',
            'name' => '角色名称',
            'description' => '描述',
            'permission' => '权限',
            'code' => '角色编码',
            'is_init' => '初始化角色：0否，1是',
            'is_default' => '默认角色：0否，1是'
        ], parent::attributeLabels());
    }

    /**
     * @inheritDoc
     */
    public function beforeSave($insert)
    {
        if (parent::beforeSave($insert)) {
            // 权限
            if (is_array($this->permission)) {
                $this->permission = implode(',', $this->permission);
            }

            return true;
        }

        return false;
    }

    /**
     * @inheritDoc
     */
    public function afterSave($insert, $changedAttributes)
    {
        parent::afterSave($insert, $changedAttributes);

        //$userMsg = '';
        if ($this->users) {
                if (!AuthAssign::saveData($this->role_id, $this->users)) {
                Yii::$app->getSession()->setFlash('error', '用户绑定失败；请检查');
            } else {
                // 写日志
                $userMsg = '绑定角色 '.$this->name.'，绑定了用户id：' . implode(',', $this->users) . ';';

                Yii::$app->systemOperateLog->write([
                    'module' => 'role',
                    'target_name' => '角色',
                    'target_id' => $this->role_id,
                    'model_class' => self::className(),
                    'template' => $userMsg,
                ]);
            }
        }
    }

    public function beforeDelete()
    {
        return parent::beforeDelete(); // TODO: Change the autogenerated stub
    }

    /**
     * @inheritDoc
     */
    public function afterDelete()
    {
        parent::afterDelete();

        // 删除此角色和用户的所有关联
        AuthAssign::deleteRole($this->role_id);
    }

    /**
     * 获取所有角色的map表
     * @return array
     */
    public static function getAllMap()
    {
        $data = self::getAllDataCache();
        return ArrayHelper::map($data, 'role_id', 'name');
    }
}
